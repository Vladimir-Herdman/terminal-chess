# Makefile for windows development: use 'make -f Makefile.win' in powershell, or use IDE like vscode
# You could also just get rid of the other Makefile text and replace it with this one to just write 'make' in powershell
# 	Relies on two things: having make in system path, and having a compiler on your system path
# 	For the compiler, if flags are different, CXXFLAGS below and change CXX to system path compiler
# 		This has worked for me using LLVM.LLVM and GNU32.Make installed with winget, and then adding to my system path
CXX = clang++
CXXFLAGS = -std=c++20 -O2 -Isrc -Wall -Wextra -Wno-bitwise-op-parentheses
CXXMACRODEF = -DTERMINALCHESS_INCLUDE_CONFIGREADER -DDEV_HELPERS_LATER_REMOVE

SRC := $(wildcard src/*.cpp) $(wildcard src/*/*.cpp) $(wildcard src/*/*/*.cpp)
OBJ := $(patsubst src/%.cpp,build/%.o,$(SRC))

all: $(OBJ)
	@cmd /C "if not exist bin mkdir bin"
	@$(CXX) $(CXXFLAGS) $(CXXMACRODEF) $(OBJ) -o bin/main.exe

build/%.o: src/%.cpp
	@cmd /C "if not exist $(subst /,\,$(dir $@)) mkdir $(subst /,\,$(dir $@))"
	@$(CXX) $(CXXFLAGS) $(CXXMACRODEF) -c $< -o $@

.PHONY: all clean test run
clean: 
	@cmd /C "if exist build rmdir /S /Q build"
	@cmd /C "if exist bin rmdir /S /Q bin"

test:
	@cmd /C "if not exist bin mkdir bin"
	@$(CXX) $(CXXFLAGS) test/test.cpp -o bin/test.exe
	@test/test.exe

run: all
	@bin/main.exe
